<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="pmm_8c">
    <title>pmm.c File Reference</title>
    <programlisting>#include &lt;mm/pmm.h&gt;</programlisting>
    <programlisting>#include &lt;debug_utils/printf.h&gt;</programlisting>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="pmm_8c_1a976e76d230cf67e977eda36e85e74536">defrag</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="pmm_8c_1a64c4a1b74b0bf32ba34832c054eb31f1">pushAllPMM</link> (
<link linkend="pmm_8h_1a56fc0f2bfc4430cfd99522588a0c6878">free_mem_t</link> m, bool merge)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="pmm_8h_1a56fc0f2bfc4430cfd99522588a0c6878">free_mem_t</link> <link linkend="pmm_8c_1a3765ad9c647b697e75cd7fdd35ab8911">popAllPMM</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint32_t <link linkend="pmm_8c_1a297ec15b59fa9bf85621b93e36f9de92">findRAMSize</link> (
<link linkend="multiboot_8h_1abc47d72689f915831784b5bd3f4c2401">multiboot_info_t</link> * mbt)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="pmm_8c_1a374593dd3e9fd308f426974eba7afc2c">mergePMM</link> (
<link linkend="pmm_8h_1a56fc0f2bfc4430cfd99522588a0c6878">free_mem_t</link> toMerge)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="pmm_8c_1a9cf1c37b91cd445b89356f56887167d0">defragmentPMM</link> (
bool original)<para><emphasis>This function is going to check for every struct, if it is possible to merge with other.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="pmm_8c_1a880478e8fea14ae37c246594be3de679">sortedInsertPMM</link> (
<link linkend="pmm_8h_1a56fc0f2bfc4430cfd99522588a0c6878">free_mem_t</link> m)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="pmm_8c_1a137be8a22aa0ceb14ec8175f132df6c7">sortPMM</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint32_t <link linkend="pmm_8c_1ab38d3119cf7271bddb0e001d53e2129b">pAllocPage</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="pmm_8c_1a1339a5075397c7100f01c9b0ecf3d886">pFreePage</link> (
void * addr)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="pmm_8h_1a56fc0f2bfc4430cfd99522588a0c6878">free_mem_t</link> <link linkend="pmm_8c_1a80e5630dfe47d73f3a54d4d47574c3da">firstFit</link> (
uint32_t size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint32_t <link linkend="pmm_8c_1ad3bc0be58c79c7407b56bf050276c5fd">roundPageAligned</link> (
uint32_t n)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint32_t <link linkend="pmm_8c_1a0fc059dc84d1d73d5388c0ffe3a3527b">pAllocPages</link> (
uint32_t size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="pmm_8c_1a9dbd902fc2b911df2deb1bf7d1683619">pFreePages</link> (
void * addr, uint32_t size)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="pmm_8c_1a145054299fcb2ac35423dd472a39079a">checkPD</link> (
uint32_t pd_start, uint32_t pd_end, <link linkend="pmm_8h_1a56fc0f2bfc4430cfd99522588a0c6878">free_mem_t</link> m)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="pmm_8c_1a226ae979acb63b841fc6d1ace18f771a">checkBoundaries</link> (
uint32_t pd_start, uint32_t pd_end, uint32_t length, uint32_t base_addr)<para><emphasis>Checks the memory map with some overlap controls. (+ = free memory; - = [used memory])</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="pmm_8c_1a864c0a7e14f8e4bd05d55cc893accda8">init_pmm</link> (
<link linkend="multiboot_8h_1abc47d72689f915831784b5bd3f4c2401">multiboot_info_t</link> * mbt, uint32_t * pd)<para><emphasis>Creates a stack (run-length encoded) of free pages.</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/t/Documents/GitHub/LostOS/src/kernel/mm/pmm.c</para>
    </simplesect>
</section>
